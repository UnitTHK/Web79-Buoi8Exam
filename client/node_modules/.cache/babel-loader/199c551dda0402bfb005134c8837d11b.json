{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const login = createAsyncThunk('auth/login', async credentials => {\n  const response = await axios.post('http://localhost:3000/auth/login', credentials);\n  return response.data;\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.status = 'loading';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","login","credentials","response","post","data","authSlice","name","initialState","user","status","error","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["F:/Others/MindX/Buoi8Exam/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const login = createAsyncThunk('auth/login', async (credentials) => {\r\n    const response = await axios.post('http://localhost:3000/auth/login', credentials);\r\n    return response.data;\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: null,\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        logout(state) {\r\n            state.user = null;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(login.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(login.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.user = action.payload;\r\n            })\r\n            .addCase(login.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    }\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAY,EAAE,MAAOG,WAAW,IAAK;EACvE,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,kCAAkC,EAAEF,WAAW,CAAC;EAClF,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,MAAMA,CAACC,KAAK,EAAE;MACVA,KAAK,CAACL,IAAI,GAAG,IAAI;IACrB;EACJ,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAChB,KAAK,CAACiB,OAAO,EAAGJ,KAAK,IAAK;MAC/BA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDO,OAAO,CAAChB,KAAK,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACzCN,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAAChB,KAAK,CAACqB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACxCN,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGP,SAAS,CAACkB,OAAO;AAE3C,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}